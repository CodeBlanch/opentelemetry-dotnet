abstract OpenTelemetry.Trace.TracerProviderBuilder.AddLegacySource(string operationName) -> OpenTelemetry.Trace.TracerProviderBuilder
OpenTelemetry.DeferredServiceDescriptor
OpenTelemetry.DeferredServiceDescriptor.DeferredServiceDescriptor(System.Type serviceType, object instance) -> void
OpenTelemetry.DeferredServiceDescriptor.DeferredServiceDescriptor(System.Type serviceType, System.Func<System.IServiceProvider, object> factory, OpenTelemetry.DeferredServiceLifetime lifetime) -> void
OpenTelemetry.DeferredServiceDescriptor.DeferredServiceDescriptor(System.Type serviceType, System.Type implementationType, OpenTelemetry.DeferredServiceLifetime lifetime) -> void
OpenTelemetry.DeferredServiceDescriptor.ImplementationFactory.get -> System.Func<System.IServiceProvider, object>
OpenTelemetry.DeferredServiceDescriptor.ImplementationInstance.get -> object
OpenTelemetry.DeferredServiceDescriptor.ImplementationType.get -> System.Type
OpenTelemetry.DeferredServiceDescriptor.Lifetime.get -> OpenTelemetry.DeferredServiceLifetime
OpenTelemetry.DeferredServiceDescriptor.ServiceType.get -> System.Type
OpenTelemetry.DeferredServiceLifetime
OpenTelemetry.DeferredServiceLifetime.Scoped = 1 -> OpenTelemetry.DeferredServiceLifetime
OpenTelemetry.DeferredServiceLifetime.Singleton = 0 -> OpenTelemetry.DeferredServiceLifetime
OpenTelemetry.DeferredServiceLifetime.Transient = 2 -> OpenTelemetry.DeferredServiceLifetime
OpenTelemetry.IDeferredServiceCollection
OpenTelemetry.Trace.IDeferredTracerProviderBuilder
OpenTelemetry.Trace.IDeferredTracerProviderBuilder.Configure(System.Action<System.IServiceProvider, OpenTelemetry.Trace.TracerProviderBuilder> configure) -> OpenTelemetry.Trace.TracerProviderBuilder
OpenTelemetry.Trace.IDeferredTracerProviderBuilder.Services.get -> OpenTelemetry.IDeferredServiceCollection
OpenTelemetry.Trace.TracerProviderBuilder.TracerProviderBuilder() -> void