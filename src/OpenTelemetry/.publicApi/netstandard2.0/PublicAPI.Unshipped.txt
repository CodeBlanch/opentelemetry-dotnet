OpenTelemetry.Logs.LogRecord.GetDataRef() -> OpenTelemetry.Logs.LogRecordData
OpenTelemetry.Logs.LogRecordData
OpenTelemetry.Logs.LogRecordData.CategoryName.get -> string?
OpenTelemetry.Logs.LogRecordData.CategoryName.set -> void
OpenTelemetry.Logs.LogRecordData.EventId.get -> Microsoft.Extensions.Logging.EventId
OpenTelemetry.Logs.LogRecordData.EventId.set -> void
OpenTelemetry.Logs.LogRecordData.Exception.get -> System.Exception?
OpenTelemetry.Logs.LogRecordData.Exception.set -> void
OpenTelemetry.Logs.LogRecordData.LogLevel.get -> Microsoft.Extensions.Logging.LogLevel
OpenTelemetry.Logs.LogRecordData.LogLevel.set -> void
OpenTelemetry.Logs.LogRecordData.LogRecordData() -> void
OpenTelemetry.Logs.LogRecordData.LogRecordData(System.Diagnostics.Activity? activity = null) -> void
OpenTelemetry.Logs.LogRecordData.Message.get -> string?
OpenTelemetry.Logs.LogRecordData.Message.set -> void
OpenTelemetry.Logs.LogRecordData.SpanId.get -> System.Diagnostics.ActivitySpanId
OpenTelemetry.Logs.LogRecordData.SpanId.set -> void
OpenTelemetry.Logs.LogRecordData.Timestamp.get -> System.DateTime
OpenTelemetry.Logs.LogRecordData.Timestamp.set -> void
OpenTelemetry.Logs.LogRecordData.TraceFlags.get -> System.Diagnostics.ActivityTraceFlags
OpenTelemetry.Logs.LogRecordData.TraceFlags.set -> void
OpenTelemetry.Logs.LogRecordData.TraceId.get -> System.Diagnostics.ActivityTraceId
OpenTelemetry.Logs.LogRecordData.TraceId.set -> void
OpenTelemetry.Logs.LogRecordData.TraceState.get -> string?
OpenTelemetry.Logs.LogRecordData.TraceState.set -> void
OpenTelemetry.Logs.LogRecordPool
OpenTelemetry.Logs.OpenTelemetryLoggerProvider.ForceFlush(int timeoutMilliseconds = -1) -> bool
OpenTelemetry.Logs.OpenTelemetryLoggerProvider.IncludeFormattedMessage.get -> bool
OpenTelemetry.Logs.OpenTelemetryLoggerProvider.OpenTelemetryLoggerProvider(System.Action<OpenTelemetry.Logs.OpenTelemetryLoggerOptions!>! configure) -> void
static OpenTelemetry.Logs.LogRecordPool.Resize(int capacity) -> void
