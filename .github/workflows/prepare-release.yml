name: Prepare for a release

on:
  workflow_dispatch:
    inputs:
      tag-prefix:
        type: choice
        options:
        - core-
        - coreunstable-
        description: 'Release tag prefix'
        required: true
      version:
        type: string
        description: 'Release version'
        required: true

  pull_request:
    types:
    - closed

  issue_comment:
    types:
    - created

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release-pr:
    if: github.event_name == 'workflow_dispatch'

    runs-on: windows-latest

    steps:
    - name: check out code
      uses: actions/checkout@v4

    - name: Create GitHub Pull Request to prepare release
      shell: pwsh
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git switch --create release/prepare-${{ inputs.tag-prefix }}${{ inputs.version }}-release 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git switch failure'
            Return
        }

        $body =
        @"
        Note: This PR was opened automatically by the [prepare release workflow](https://github.com/${{ github.repository }}/actions/workflows/prepare-release.yml).

        ## Changes

        * CHANGELOG files updated for projects being released.
        "@

        # Update CHANGELOGs
        & ./build/scripts/update-changelogs.ps1 -minVerTagPrefix "${{ inputs.tag-prefix }}" -version "${{ inputs.version }}"

        # Update publicApi files for stable releases
        if ("${{ inputs.version }}" -notlike "*-alpha*" -and "${{ inputs.version }}" -notlike "*-beta*" -and "${{ inputs.version }}" -notlike "*-rc*")
        {
          & ./build/scripts/finalize-publicapi.ps1 -minVerTagPrefix "${{ inputs.tag-prefix }}"

          $body += "`r`n* Public API files updated for projects being released (only performed for stable releases)."
        }

        git commit -a -m "Prepare repo to release ${{ inputs.tag-prefix }}${{ inputs.version }}." 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git commit failure'
            Return
        }

        git push -u origin release/prepare-${{ inputs.tag-prefix }}${{ inputs.version }}-release 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git push failure'
            Return
        }

        gh pr create `
          --title "[repo] Prepare release ${{ inputs.tag-prefix }}${{ inputs.version }}" `
          --body $body `
          --base ${{ github.ref_name }} `
          --head release/prepare-${{ inputs.tag-prefix }}${{ inputs.version }}-release `
          --label infra
      env:
        GH_TOKEN: ${{ github.token }}

  lock-pr-and-post-notice-to-create-release-tag:
    if: |
      github.event_name == 'pull_request'
      && github.event.action == 'closed'
      && github.event.pull_request.user.login == 'github-actions[bot]'
      && github.event.pull_request.merged == true
      && startsWith(github.event.pull_request.title, '[repo] Prepare release ')

    runs-on: windows-latest

    env:
      PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}

    steps:
    - name: check out code
      uses: actions/checkout@v4

    - name: Lock GitHub Pull Request to prepare release
      shell: pwsh
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        $match = [regex]::Match($env:PULL_REQUEST_TITLE, '^\[repo\] Prepare release (.*)$')
        if ($match.Success -eq $false)
        {
            Write-Error 'Could not parse tag from PR title'
            Return
        }

        $tag = $match.Groups[1].Value

        git tag -a $tag -m "$tag" $prViewResponse.mergeCommit.oid 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git tag failure'
            Return
        }

        $body =
        @"
        I noticed this PR was merged.

        Post a comment with "/CreateReleaseTag" in the body if you would like me to create the release tag ``$tag`` for [the merge commit](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.merge_commit_sha }}) and then trigger the package workflow.
        "@

        gh pr comment ${{ github.event.pull_request.number }} `
          --body $body

        gh pr lock ${{ github.event.pull_request.number }}
      env:
        GH_TOKEN: ${{ github.token }}

  create-release-tag-unlock-pr-post-notice:
    if: |
      github.event_name == 'issue_comment'
      && github.event.issue.pull_request
      && github.event.issue.locked == true
      && contains(github.event.comment.body, '/CreateReleaseTag')
      && startsWith(github.event.issue.title, '[repo] Prepare release ')
      && github.event.issue.pull_request.merged_at

    runs-on: windows-latest

    env:
      PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}

    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}

    steps:
    - name: check out code
      uses: actions/checkout@v4
      with:
        # Note: By default GitHub only fetches 1 commit which fails the git tag operation below
        fetch-depth: 0

    - name: Create release tag
      id: create-tag
      shell: pwsh
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        $prViewResponse = gh pr view ${{ github.event.issue.number }} --json mergeCommit,author | ConvertFrom-Json

        if ($prViewResponse.author.is_bot -eq $false -or $prViewResponse.author.login -ne 'app/github-actions')
        {
            Write-Error 'PR author was unexpected'
            Return
        }

        $match = [regex]::Match($env:PULL_REQUEST_TITLE, '^\[repo\] Prepare release (.*)$')
        if ($match.Success -eq $false)
        {
            Write-Error 'Could not parse tag from PR title'
            Return
        }

        $tag = $match.Groups[1].Value

        git tag -a $tag -m "$tag" $prViewResponse.mergeCommit.oid 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git tag failure'
            Return
        }

        git push origin $tag 2>&1 | % ToString
        if ($LASTEXITCODE -gt 0)
        {
            Write-Error 'git push failure'
            Return
        }

        gh pr unlock ${{ github.event.issue.number }}

        $body =
        @"
        I just pushed the [$tag](https://github.com/${{ github.repository }}/releases/tag/$tag) tag.

        The [package workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) should begin momentarily.
        "@

        gh pr comment ${{ github.event.issue.number }} `
          --body $body

        echo "tag=$tag" >> $env:GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}

  invoke-package-workflow:
    needs: create-release-tag-unlock-pr-post-notice
    uses: ./.github/workflows/publish-packages-1.0.yml
    with:
      tag: ${{ needs.create-release-tag-unlock-pr-post-notice.outputs.tag }}

  post-packages-ready-notice:
    needs:
    - create-release-tag-unlock-pr-post-notice
    - invoke-package-workflow
    runs-on: windows-latest
    steps:
    - name: check out code
      uses: actions/checkout@v4

    - name: Post notice when packages are ready
      shell: pwsh
      run: |
        $body =
        @"
        The packages for [${{ needs.create-release-tag-unlock-pr-post-notice.outputs.tag }}](https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-release-tag-unlock-pr-post-notice.outputs.tag }}) are now available: ${{ needs.invoke-package-workflow.outputs.artifact-url }}.

        Have a nice day!
        "@

        gh pr comment ${{ github.event.issue.number }} `
          --body $body
      env:
        GH_TOKEN: ${{ github.token }}
