name: Build

on:
  pull_request:
    branches: [ 'main*' ]

jobs:
  lint-misspell-sanitycheck:
    uses: ./.github/workflows/sanitycheck.yml

  detect-changes:
    runs-on: windows-latest
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    steps:
    - uses: AurorNZ/paths-filter@v3
      id: changes
      with:
        filters: |
          md: ['**.md']
          build: ['build/**', '.github/**/*.yml', '**/*.targets', '**/*.props']
          shared: ['src/Shared/**']
          code: ['**.cs', '**.csproj', '.editorconfig']
          packaged-code: ['src/**', '!**/*.md']
          instrumentation: ['*/OpenTelemetry.Instrumentation*/**', '!**/*.md']
          api: ['*/OpenTelemetry.Api*/**', '!**/*.md']
          otlp: ['*/OpenTelemetry.Exporter.OpenTelemetryProtocol*/**', '!**/*.md']

  lint-md:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'md')
    uses: ./.github/workflows/markdownlint.yml

  lint-dotnet-format:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/dotnet-format.yml

  build-test-solution-stable:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'code')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/Component.BuildTest.yml
    with:
      project-name: 'OpenTelemetry.sln'
      project-build-commands: '-p:ExposeExperimentalFeatures=false'
      code-cov-name: 'Solution-Stable'

  build-test-solution-experimental:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'code')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/Component.BuildTest.yml
    with:
      project-name: 'OpenTelemetry.sln'
      project-build-commands: '-p:ExposeExperimentalFeatures=true'
      code-cov-name: 'Solution-Experimental'

  build-test-instrumentation:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'instrumentation')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/Component.BuildTest.yml
    with:
      project-name: './build/InstrumentationLibraries.proj'
      project-build-commands: '-p:RunningDotNetPack=true'
      code-cov-name: 'Instrumentation'

  integration-test:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'api')
      || contains(needs.detect-changes.outputs.changes, 'otlp')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/integration.yml

  validate-packages:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'packaged-code')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/package-validation.yml

  generate-docs:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'packaged-code')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/docfx.yml

  verify-aot-compat:
    needs: detect-changes
    if: |
      contains(needs.detect-changes.outputs.changes, 'packaged-code')
      || contains(needs.detect-changes.outputs.changes, 'build')
      || contains(needs.detect-changes.outputs.changes, 'shared')
    uses: ./.github/workflows/verifyaotcompat.yml

  build-test:
    needs: [
      lint-misspell-sanitycheck,
      detect-changes,
      lint-md,
      lint-dotnet-format,
      build-test-solution-stable,
      build-test-solution-experimental,
      build-test-instrumentation,
      integration-test,
      validate-packages,
      generate-docs,
      verify-aot-compat
      ]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    runs-on: windows-latest
    steps:
    - run: echo 'build complete âœ“'
